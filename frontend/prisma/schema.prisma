generator js {
    provider = "prisma-client-js"
}

//Used for automatic Entity Relationship Diagram of the DB schema
generator dbml {
    provider   = "prisma-dbml-generator"
    outputName = "OpalERD.dbml"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL")
}

// Models
model Study {
    project_id String @id @unique

    // Relations
    Samples Sample[]
}

model Sample {
    samp_name String @id @unique

    // Relations
    Study      Study        @relation(fields: [studyId], references: [project_id])
    studyId    String
    markerId   String
    Marker     Marker       @relation(fields: [markerId], references: [assay_name])
    Occurrence Occurrence[]

    decimalLatitude  Float
    decimalLongitude Float
}

model Marker {
    assay_name String @id @unique

    // Relations
    Samples   Sample[]
    Libraries Library[]
}

model Library {
    library_id String @id @unique

    // Relations
    Marker   Marker @relation(fields: [markerId], references: [assay_name])
    markerId String
    Runs     Run[]
}

model Run {
    id Int @id @default(autoincrement())

    // Relations
    Library     Library      @relation(fields: [libraryId], references: [library_id])
    libraryId   String
    Occurrences Occurrence[]
}

// ASVs
model Occurrence {
    id Int @id @default(autoincrement())

    // Relations
    runId     Int?
    Run       Run?    @relation(fields: [runId], references: [id])
    sampleId  String
    Sample    Sample  @relation(fields: [sampleId], references: [samp_name])
    featureId String
    Feature   Feature @relation(fields: [featureId], references: [seq_id])

    organismQuantity Int
}

model Feature {
    seq_id String @id @unique

    // Relations
    Occurrences         Occurrence[]
    Assignments         Assignment[]
    consensusTaxonomyId String?
    consensusTaxonomy   Taxonomy?    @relation(fields: [consensusTaxonomyId], references: [stringIdentifier])

    sequence String
}

model Assignment {
    id Int @id @default(autoincrement())

    // Relations
    featureId  String
    Feature    Feature  @relation(fields: [featureId], references: [seq_id])
    taxonomyId String
    Taxonomy   Taxonomy @relation(fields: [taxonomyId], references: [stringIdentifier])

    confidence Float
}

model Taxonomy {
    stringIdentifier String @id @unique

    // Relations
    Assignments Assignment[]
    Features    Feature[]

    kingdom    String?
    phylum     String?
    taxonClass String? @map("class")
    order      String?
    family     String?
    genus      String?
    species    String?
}

//Other
model GenericData {
    id Int @id @default(autoincrement())

    // Relations

    key   String
    value String
}
